<head>
	<style>
	canvas { width: 100%; height:100% }
</style>
</head>
<body style="height: 100vh; position:fixed;
z-index:0;">
<script src="js/three.js"></script>
<script>

	function startAnimation(parent, width, height) {

		var scene = new THREE.Scene();
		var camera = new THREE.PerspectiveCamera( 50, window.innerWidth/window.innerHeight, 0.1, 1000 );

			//field of view, aspect ratio, near and far clipping plane

			var renderer = new THREE.WebGLRenderer();
			renderer.setSize( window.innerWidth, window.innerHeight );
			document.body.appendChild( renderer.domElement );




// var curve = new THREE.CatmullRomCurve3( [
// 	new THREE.Vector3( -45, 0, 0 ),
// 	new THREE.Vector3( -25, 0.4, 0 ),
// 	new THREE.Vector3( 0, -0.4, 0 ),
// 	new THREE.Vector3( 25, 0.4, 0 ),
// 	new THREE.Vector3( 45, 0, 0 )
// ], false, 'centripetal',  100 );

// var points = curve.getPoints( 50 );
// var geometry = new THREE.BufferGeometry().setFromPoints( points );

// var material = new THREE.LineBasicMaterial( { color: 0x00b19d, shading: THREE.SmoothShading, transparent: true, opacity: 0.2 } );

// // Create the final object to add to the scene
// var curveObject = new THREE.Line( geometry, material );

// scene.add( curveObject);



// var curve = new THREE.CatmullRomCurve3( [
// 	new THREE.Vector3( -45, 0, 0 ),
// 	new THREE.Vector3( -25, -0.3, 0 ),
// 	new THREE.Vector3( 0, 0.3, 0 ),
// 	new THREE.Vector3( 25, -0.3, 0 ),
// 	new THREE.Vector3( 45, 0, 0 )
// ], false, 'centripetal',  1 );

// var points = curve.getPoints( 50 );
// var geometry = new THREE.BufferGeometry().setFromPoints( points );

// var material = new THREE.LineBasicMaterial( { color: 0x00b19d, shading: THREE.SmoothShading, transparent: true, opacity: 0.2 } );

// // Create the final object to add to the scene
// var curveObject1 = new THREE.Line( geometry, material );

// scene.add( curveObject1);



// var curve = new THREE.CatmullRomCurve3( [
// 	new THREE.Vector3( -45, 0.3, 0 ),
// 	new THREE.Vector3( -35, 0, 0 ),
// 	new THREE.Vector3( 0, -0.3, 0 ),
// 	new THREE.Vector3( 35, 0, 0 ),
// 	new THREE.Vector3( 45, 0.3, 0 )
// ], false, 'centripetal',  1 );

// var points = curve.getPoints( 50 );
// var geometry = new THREE.BufferGeometry().setFromPoints( points );

// var material = new THREE.LineBasicMaterial( { color: 0x00b19d, shading: THREE.SmoothShading, transparent: true, opacity: 0.2 } );

// // Create the final object to add to the scene
// var curveObject2 = new THREE.Line( geometry, material );

// scene.add( curveObject2);



// var curve = new THREE.CatmullRomCurve3( [
// 	new THREE.Vector3( -45, -0.3, 0 ),
// 	new THREE.Vector3( -35, 0, 0 ),
// 	new THREE.Vector3( 0, 0.3, 0 ),
// 	new THREE.Vector3( 35, 0, 0 ),
// 	new THREE.Vector3( 45, -0.3, 0 )
// ], false, 'centripetal',  1 );

// var points = curve.getPoints( 50 );
// var geometry = new THREE.BufferGeometry().setFromPoints( points );

// var material = new THREE.LineBasicMaterial( { color: 0x00b19d, shading: THREE.SmoothShading, transparent: true, opacity: 0.2 } );

// // Create the final object to add to the scene
// var curveObject3 = new THREE.Line( geometry, material );

// scene.add( curveObject3);



var curve = new THREE.CatmullRomCurve3( [
	new THREE.Vector3( -55, 0, 0 ),
	new THREE.Vector3( -45, 0.3, 0 ),
	new THREE.Vector3( -25, -0.3, 0 ),
	new THREE.Vector3( 0, 0.3, 0 ),
	new THREE.Vector3( 25, 0.3, 0 ),
	new THREE.Vector3( 45, -0.3, 0 ),
	new THREE.Vector3( 55, 0, 0 )
	], false, 'centripetal',  1 );

var points = curve.getPoints( 50 );
var geometry = new THREE.BufferGeometry().setFromPoints( points );

var material = new THREE.LineBasicMaterial( { color: 0x00b19d, transparent: true, opacity: 0.5 } );

// Create the final object to add to the scene
var curveObject4 = new THREE.Line( geometry, material );

scene.add( curveObject4);


var curve = new THREE.CatmullRomCurve3( [
	new THREE.Vector3( -55, 0, 0 ),
	new THREE.Vector3( -45, -0.3, 0 ),
	new THREE.Vector3( -25, 0.3, 0 ),
	new THREE.Vector3( 0, -0.1, 0 ),
	new THREE.Vector3( 25, -0.3, 0 ),
	new THREE.Vector3( 45, 0.3, 0 ),
	new THREE.Vector3( 55, 0, 0 )
	], false, 'centripetal',  1 );

var points = curve.getPoints( 50 );
var geometry = new THREE.BufferGeometry().setFromPoints( points );

var material = new THREE.LineBasicMaterial( { color: 0x00b19d, transparent: true, opacity: 0.5 } );

// Create the final object to add to the scene
var curveObject5 = new THREE.Line( geometry, material );

scene.add( curveObject5);



var curve = new THREE.CatmullRomCurve3( [
	new THREE.Vector3( -55, 0.3, 0 ),
	new THREE.Vector3( -45, -0.3, 0 ),
	new THREE.Vector3( -25, -0.3, 0 ),
	new THREE.Vector3( 0, 0.1, 0 ),
	new THREE.Vector3( 25, 0.3, 0 ),
	new THREE.Vector3( 45, 0.3, 0 ),
	new THREE.Vector3( 55, -0.3, 0 )
	], false, 'centripetal',  1 );

var points = curve.getPoints( 50 );
var geometry = new THREE.BufferGeometry().setFromPoints( points );

var material = new THREE.LineBasicMaterial( { color: 0x00b19d,transparent: true, opacity: 0.5 } );

// Create the final object to add to the scene
var curveObject6 = new THREE.Line( geometry, material );

scene.add( curveObject6);


var curve = new THREE.CatmullRomCurve3( [
	new THREE.Vector3( -55, -0.3, 0 ),
	new THREE.Vector3( -45, 0.3, 0 ),
	new THREE.Vector3( -25, 0.3, 0 ),
	new THREE.Vector3( 0, 0.2, 0 ),
	new THREE.Vector3( 25, -0.3, 0 ),
	new THREE.Vector3( 45, -0.3, 0 ),
	new THREE.Vector3( 55, 0.3, 0 )
	], false, 'centripetal',  1 );

var points = curve.getPoints( 50 );
var geometry = new THREE.BufferGeometry().setFromPoints( points );

var material = new THREE.LineBasicMaterial( { color: 0x00b19d, transparent: true, opacity: 0.5 } );

// Create the final object to add to the scene
var curveObject7 = new THREE.Line( geometry, material );

scene.add( curveObject7);


var curve = new THREE.CatmullRomCurve3( [
	new THREE.Vector3( -55, -0.3, 0 ),
	new THREE.Vector3( -35, 0.3, 0 ),
	new THREE.Vector3( -15, 0.3, 0 ),
	new THREE.Vector3( 0, 0, 0 ),
	new THREE.Vector3( 15, -0.3, 0 ),
	new THREE.Vector3( 35, -0.3, 0 ),
	new THREE.Vector3( 55, 0.3, 0 )
	], false, 'centripetal',  1 );

var points = curve.getPoints( 50 );
var geometry = new THREE.BufferGeometry().setFromPoints( points );

var material = new THREE.LineBasicMaterial( { color: 0x00b19d, transparent: true, opacity: 0.5 } );

// Create the final object to add to the scene
var curveObject8 = new THREE.Line( geometry, material );

scene.add( curveObject8);




var curve = new THREE.CatmullRomCurve3( [
	new THREE.Vector3( -55, 0.3, 0 ),
	new THREE.Vector3( -35, -0.3, 0 ),
	new THREE.Vector3( -15, -0.3, 0 ),
	new THREE.Vector3( 0, 0, 0 ),
	new THREE.Vector3( 15, 0.3, 0 ),
	new THREE.Vector3( 35, 0.3, 0 ),
	new THREE.Vector3( 55, -0.3, 0 )
	], false, 'centripetal',  1 );

var points = curve.getPoints( 50 );
var geometry = new THREE.BufferGeometry().setFromPoints( points );

var material = new THREE.LineBasicMaterial( { color: 0x00b19d, transparent: true, opacity: 0.5 } );

// Create the final object to add to the scene
var curveObject9 = new THREE.Line( geometry, material );

scene.add( curveObject9);


var curve = new THREE.CatmullRomCurve3( [
	new THREE.Vector3( -55, 0.3, 0 ),
	new THREE.Vector3( -45, -0.3, 0 ),
	new THREE.Vector3( -35, 0.3, 0 ),
	new THREE.Vector3( -25, -0.3, 0 ),
	new THREE.Vector3( -15, 0.3, 0 ),
	new THREE.Vector3( 0, -0.3, 0 ),
	new THREE.Vector3( 15, 0.3, 0 ),
	new THREE.Vector3( 25, -0.3, 0 ),
	new THREE.Vector3( 35, 0.3, 0 ),
	new THREE.Vector3( 45, -0.3, 0 ),
	new THREE.Vector3( 55, 0.3, 0 ),
	], false, 'centripetal',  1 );

var points = curve.getPoints( 50 );
var geometry = new THREE.BufferGeometry().setFromPoints( points );

var material = new THREE.LineBasicMaterial( { color: 0x00b19d, transparent: true, opacity: 0.5 } );

// Create the final object to add to the scene
var curveObject10 = new THREE.Line( geometry, material );

scene.add( curveObject10);



var curve = new THREE.CatmullRomCurve3( [
	new THREE.Vector3( -55, -0.3, 0 ),
	new THREE.Vector3( -45, 0.3, 0 ),
	new THREE.Vector3( -35, -0.3, 0 ),
	new THREE.Vector3( -25, 0.3, 0 ),
	new THREE.Vector3( -15, -0.3, 0 ),
	new THREE.Vector3( 0, 0.3, 0 ),
	new THREE.Vector3( 15, -0.3, 0 ),
	new THREE.Vector3( 25, 0.3, 0 ),
	new THREE.Vector3( 35, -0.3, 0 ),
	new THREE.Vector3( 45, 0.3, 0 ),
	new THREE.Vector3( 55, -0.3, 0 ),
	], false, 'centripetal',  1 );

var points = curve.getPoints( 50 );
var geometry = new THREE.BufferGeometry().setFromPoints( points );

var material = new THREE.LineBasicMaterial( { color: 0x00b19d, transparent: true, opacity: 0.5 } );

// Create the final object to add to the scene
var curveObject11 = new THREE.Line( geometry, material );

scene.add( curveObject11);



var geometry = new THREE.BoxGeometry( 5, 5, 5,3,3,3 );
var material = new THREE.MeshBasicMaterial( { wireframe: true, color: 0x00b19d, transparent: true, opacity: 0.1 } );
var cube = new THREE.Mesh( geometry, material ); 
scene.add( cube );

cube.position.z = -60;
cube.position.y = -10;
cube.position.x = +60;

camera.position.z = 53;
camera.position.y = -20.6;




var geometry = new THREE.BoxGeometry( 5, 5, 5,3,3,3 );
var material = new THREE.MeshBasicMaterial( { wireframe: true, color: 0x00b19d, transparent: true, opacity: 0.1 } );
var cube1 = new THREE.Mesh( geometry, material ); 
scene.add( cube1 );

cube1.position.z = -60;
cube1.position.y = -10;
cube1.position.x = +60;

var geometry = new THREE.BoxGeometry( 5, 5, 5,3,3,3 );
var material = new THREE.MeshBasicMaterial( { wireframe: true, color: 0x00b19d, transparent: true, opacity: 0.1 } );
var cube2 = new THREE.Mesh( geometry, material ); 
scene.add( cube2 );

cube2.position.z = -60;
cube2.position.y = -10;
cube2.position.x = +60;








var render = function () {
	requestAnimationFrame( render );

				// curveObject.rotation.x += 0.02;
				// curveObject1.rotation.x -= 0.02;
				// curveObject2.rotation.x -= 0.02;
				// curveObject3.rotation.x += 0.02;
				curveObject4.rotation.x += 0.02;
				curveObject5.rotation.x -= 0.02; 
				curveObject6.rotation.x -= 0.02;
				curveObject7.rotation.x += 0.015;
				curveObject8.rotation.x += 0.015;
				curveObject9.rotation.x -= 0.015;
				curveObject10.rotation.x -= 0.015;
				curveObject11.rotation.x -= 0.015;
				
				cube.position.z += 0.119;
				cube.position.x -= 0.064;
				cube.position.y -= 0.01;
				cube.rotation.x -= 0.015;
				cube.rotation.y -= 0.015;

				cube1.position.z += 0.12;
				cube1.position.x -= 0.062;
				cube1.position.y -= 0.02;
				cube1.rotation.x -= 0.01;
				cube1.rotation.y -= 0.01;

				cube2.position.z += 0.117;
				cube2.position.x -= 0.065;
				cube2.position.y += 0.001;
				cube2.rotation.x -= 0.013;
				cube2.rotation.y -= 0.017;
				


				renderer.render(scene, camera);
			};

			render();
}


		startAnimation(
			document.getElementById("home"),
			window.innerWidth,
			window.innerHeight);

		</script>


